apply plugin: 'com.android.application'
apply plugin: 'channel'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
// 添加插件
apply plugin: 'com.mob.sdk'

// 加载 local.properties 资源
Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.amkj.dmsh"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 233
        versionName '4.6.8'
        multiDexEnabled true
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'/*, 'x86', 'x86', 'x86_64'*/
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.amkj.dmsh",
                JPUSH_APPKEY : "efbe9e2b20a8ee61d892cea2", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
                MTA_APPKEY   : "A1M12V8YKBTI",
                MTA_CHANNEL  : ""
        ]
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    signingConfigs {
        release {
            try {
                keyAlias properties.getProperty('keyAlias')
                keyPassword properties.getProperty('keyPassword')
//                storeFile file('C:/Users/atd48/Desktop/917555f39de315ae75eff6a621b59b47.keystore')
                storeFile file('917555f39de315ae75eff6a621b59b47.keystore')
                storePassword properties.getProperty('keyPassword')
                v1SigningEnabled true
                v2SigningEnabled true
            } catch (ignored) {
            }
        }
    }
    // 构建类型
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// 在MobSDK的扩展中注册SMSSDK的相关信息
MobSDK {
    SMSSDK {
        version "3.3.2"
        gui false
    }
}

/*直接编译生成多渠道包*/
channel {
    //指定渠道文件
    channelFile = rootProject.file("channel.txt")
    //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
    baseOutputDir = new File(project.buildDir, "channel")
    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
    apkNameFormat = '${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    isFastMode = false
    //buildTime的时间格式，默认格式：yyyyMMdd-HHmmss
    buildTimeDateFormat = 'yyyyMMdd-HH:mm:ss'
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}

rebuildChannel {
    //指定渠道文件
    channelFile = rootProject.file("channel.txt")
//    baseDebugApk = 已有Debug APK
//    baseReleaseApk = file("C:/jiagu/output/13751077044/domolife3.0.8.apk")
    baseReleaseApk = new File(project.buildDir, "outputs/apk/release/domolife3.3.0apk")
    //默认为new File(project.buildDir, "rebuildChannel/debug")
//    debugOutputDir = Debug渠道包输出目录
    //默认为new File(project.buildDir, "rebuildChannel/release")
    releaseOutputDir = new File(project.buildDir, "rebuildChannel/release")
    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    isFastMode = false
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.multidex:multidex:$versions.multidex"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.emoji:emoji:$versions.emoji"
    implementation "androidx.emoji:emoji-bundled:$versions.emoji"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    implementation "com.google.android.material:material:$versions.material"
    implementation "com.google.firebase:firebase-appindexing:$versions.firebase"
    implementation "com.google.code.gson:gson:$versions.gson"
    implementation "com.google.android:flexbox:$versions.flexbox"


    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'


    implementation 'com.yanzhenjie:permission:2.0.0-rc12'
    //    渠道包 暂时有问题留意后续版本
//    api 'com.leon.channel:helper:2.0.2'

    // 图表统计
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //noinspection GradleCompatible
    implementation 'com.gongwen:marqueelibrary:1.1.3'

    //    basePopupWindows
    implementation 'com.github.razerdp:BasePopup:2.2.3'

    //    下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-21'

    //    leakcanary 内存
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'

    //ButterKnife view注解
    implementation "com.jakewharton:butterknife:$versions.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$versions.butterknife"
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"

    //rx全家桶
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "com.dhh:rxLife2:$versions.rxLife2"

    //    retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    implementation 'com.jakewharton:disklrucache:2.0.2'

    //fastjson
    implementation 'com.alibaba:fastjson:1.2.54'

    /*极光推送*/
    implementation 'cn.jiguang.sdk:jpush:3.1.7'
    implementation 'cn.jiguang.sdk:jcore:1.2.6'

    //状态栏设置
    implementation 'com.gyf.immersionbar:immersionbar:2.3.3'

    //阿里云oss
    implementation 'com.aliyun.dpa:oss-android-sdk:2.9.2'

    //基础安全组件（必选）
    implementation 'com.taobao.android:securityguardaar3:5.4.171@aar'
    implementation 'com.taobao.android:securitybodyaar3:5.4.99@aar'
    implementation 'com.taobao.android:avmpaar3:5.4.36@aar'
    implementation 'com.taobao.android:sgmiddletieraar3:5.4.9@aar'

    //Mtop网关优化（必选）
    implementation 'com.taobao.android:mtopsdk_allinone_open:3.1.2.5@jar'

    //登录授权（必选）
    implementation 'com.ali.auth.sdk:alibabauth_core:2.0.0.6@aar'
    implementation 'com.ali.auth.sdk:alibabauth_ui:2.0.0.6@aar'
    implementation 'com.ali.auth.sdk:alibabauth_ext:2.0.0.6@aar'

    //appLink（必选，打通“手机淘宝”与三方app的桥梁，实现手机淘宝与三方app之间的往返跳转,包括登陆时跳手淘授权,用手淘打开商品页,店铺等）
    implementation 'com.alibaba.sdk.android:alibc_link_partner:4.1.15@aar'

    //基础电商组件（必选，包含打开detail,淘客分佣,jsbridge注入等功能）
    implementation 'com.alibaba.sdk.android:AlibcTradeCommon:4.0.0.8@aar'
    implementation 'com.alibaba.sdk.android:AlibcTradeBiz:4.0.0.8@aar'
    implementation 'com.alibaba.sdk.android:nb_trade:4.0.0.8@aar'

    //【可选】仅供特殊合作伙伴使用
    implementation 'com.ali.auth.sdk:alibabauth_accountlink:1.4.2@jar'

    //UT
    implementation 'com.taobao.android:utdid4all:1.1.5.3_proguard@jar'
    implementation 'com.alibaba.mtl:app-monitor-sdk:2.5.1.3_for_bc_proguard@jar'

    //    微信支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

    //mta 3.4.7 稳定版
    implementation 'com.qq.mta:mta:3.4.7-release'

    //mid jar包 必须添加
    implementation 'com.tencent.mid:mid:4.06-Release'

    //  腾讯热更新
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.2'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    annotationProcessor 'com.tencent.tinker:tinker-android-anno:1.9.9'
    compileOnly 'com.tencent.tinker:tinker-android-anno:1.9.9'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    //最新版本
    implementation 'cc.linkedme.deeplinks:link-page:1.1.12'

    //  loadSir 加载页面
    implementation 'com.kingja.loadsir:loadsir:1.3.6'

    //    圆角图片
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //    消息数目显示
    implementation 'q.rorbin:badgeview:1.1.2'

    //    自动适配屏幕
    implementation 'me.jessyan:autosize:1.2.1'

    //    BaseRecyclerViewAdapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'

    //富文本
    implementation 'com.zzhoujay.richtext:richtext:3.0.8'
    implementation 'com.zzhoujay:html:1.0.2'

    implementation 'org.greenrobot:eventbus:3.1.1'

    //    加载dialog
    implementation 'com.kaopiz:kprogresshud:1.2.0'

    //    自定义Toast 避免关闭通知 不显示Toast
    implementation 'com.hjq:toast:8.0'

    //跑马灯
    implementation 'li.y.z:simplemarqueeviewlib:1.2.0'

    //    gif展示
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.20'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'me.zhanghai.android.materialratingbar:library:1.3.3'
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    implementation 'com.qiyukf.unicorn:unicorn:5.7.6'
    implementation 'com.github.princekin-f:EasyFloat:1.3.0'
    implementation 'cn.jzvd:jiaozivideoplayer:6.4.1'
    implementation project(':countdowntime')
    implementation project(':TuSDKUIDefault')
    implementation project(':TextView-LinkBuilder')
    implementation project(':picture_library')
    implementation project(':convenientbanner')
    implementation project(':FloatingActionButton')
}
